// source: aps_proto/proto/aps_msgs.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

goog.exportSymbol('proto.aps.Edge', null, global);
goog.exportSymbol('proto.aps.MessageType', null, global);
goog.exportSymbol('proto.aps.Pose', null, global);
goog.exportSymbol('proto.aps.ProcessReturn', null, global);
goog.exportSymbol('proto.aps.ProcessStatus', null, global);
goog.exportSymbol('proto.aps.Quaternion', null, global);
goog.exportSymbol('proto.aps.Vec3', null, global);
goog.exportSymbol('proto.aps.apsColorizeAutoParam', null, global);
goog.exportSymbol('proto.aps.apsConvertExportParam', null, global);
goog.exportSymbol('proto.aps.apsConvertImportParam', null, global);
goog.exportSymbol('proto.aps.apsFullMsg', null, global);
goog.exportSymbol('proto.aps.apsGlobalControlParam', null, global);
goog.exportSymbol('proto.aps.apsGlobalRTKParam', null, global);
goog.exportSymbol('proto.aps.apsLoopAutoSearchParam', null, global);
goog.exportSymbol('proto.aps.apsLoopManualMatchParam', null, global);
goog.exportSymbol('proto.aps.apsLoopManualOptimizeParam', null, global);
goog.exportSymbol('proto.aps.apsLoopManualSelectParam', null, global);
goog.exportSymbol('proto.aps.apsSaveProjectParam', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aps.Vec3 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aps.Vec3, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aps.Vec3.displayName = 'proto.aps.Vec3';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aps.Quaternion = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aps.Quaternion, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aps.Quaternion.displayName = 'proto.aps.Quaternion';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aps.Pose = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aps.Pose, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aps.Pose.displayName = 'proto.aps.Pose';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aps.ProcessReturn = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aps.ProcessReturn, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aps.ProcessReturn.displayName = 'proto.aps.ProcessReturn';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aps.Edge = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aps.Edge, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aps.Edge.displayName = 'proto.aps.Edge';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aps.apsConvertImportParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aps.apsConvertImportParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aps.apsConvertImportParam.displayName = 'proto.aps.apsConvertImportParam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aps.apsConvertExportParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aps.apsConvertExportParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aps.apsConvertExportParam.displayName = 'proto.aps.apsConvertExportParam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aps.apsSaveProjectParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aps.apsSaveProjectParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aps.apsSaveProjectParam.displayName = 'proto.aps.apsSaveProjectParam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aps.apsLoopManualSelectParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aps.apsLoopManualSelectParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aps.apsLoopManualSelectParam.displayName = 'proto.aps.apsLoopManualSelectParam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aps.apsLoopManualMatchParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aps.apsLoopManualMatchParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aps.apsLoopManualMatchParam.displayName = 'proto.aps.apsLoopManualMatchParam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aps.apsLoopManualOptimizeParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aps.apsLoopManualOptimizeParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aps.apsLoopManualOptimizeParam.displayName = 'proto.aps.apsLoopManualOptimizeParam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aps.apsLoopAutoSearchParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aps.apsLoopAutoSearchParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aps.apsLoopAutoSearchParam.displayName = 'proto.aps.apsLoopAutoSearchParam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aps.apsGlobalControlParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aps.apsGlobalControlParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aps.apsGlobalControlParam.displayName = 'proto.aps.apsGlobalControlParam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aps.apsGlobalRTKParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aps.apsGlobalRTKParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aps.apsGlobalRTKParam.displayName = 'proto.aps.apsGlobalRTKParam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aps.apsColorizeAutoParam = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aps.apsColorizeAutoParam, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aps.apsColorizeAutoParam.displayName = 'proto.aps.apsColorizeAutoParam';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.aps.apsFullMsg = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.aps.apsFullMsg, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.aps.apsFullMsg.displayName = 'proto.aps.apsFullMsg';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aps.Vec3.prototype.toObject = function(opt_includeInstance) {
  return proto.aps.Vec3.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aps.Vec3} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aps.Vec3.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    y: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    z: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aps.Vec3}
 */
proto.aps.Vec3.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aps.Vec3;
  return proto.aps.Vec3.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aps.Vec3} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aps.Vec3}
 */
proto.aps.Vec3.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setZ(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aps.Vec3.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aps.Vec3.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aps.Vec3} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aps.Vec3.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getZ();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional double x = 1;
 * @return {number}
 */
proto.aps.Vec3.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.aps.Vec3} returns this
 */
proto.aps.Vec3.prototype.setX = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double y = 2;
 * @return {number}
 */
proto.aps.Vec3.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.aps.Vec3} returns this
 */
proto.aps.Vec3.prototype.setY = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double z = 3;
 * @return {number}
 */
proto.aps.Vec3.prototype.getZ = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.aps.Vec3} returns this
 */
proto.aps.Vec3.prototype.setZ = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aps.Quaternion.prototype.toObject = function(opt_includeInstance) {
  return proto.aps.Quaternion.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aps.Quaternion} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aps.Quaternion.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    y: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    z: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    w: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aps.Quaternion}
 */
proto.aps.Quaternion.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aps.Quaternion;
  return proto.aps.Quaternion.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aps.Quaternion} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aps.Quaternion}
 */
proto.aps.Quaternion.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setZ(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setW(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aps.Quaternion.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aps.Quaternion.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aps.Quaternion} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aps.Quaternion.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getZ();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getW();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional double x = 1;
 * @return {number}
 */
proto.aps.Quaternion.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.aps.Quaternion} returns this
 */
proto.aps.Quaternion.prototype.setX = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double y = 2;
 * @return {number}
 */
proto.aps.Quaternion.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.aps.Quaternion} returns this
 */
proto.aps.Quaternion.prototype.setY = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double z = 3;
 * @return {number}
 */
proto.aps.Quaternion.prototype.getZ = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.aps.Quaternion} returns this
 */
proto.aps.Quaternion.prototype.setZ = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double w = 4;
 * @return {number}
 */
proto.aps.Quaternion.prototype.getW = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.aps.Quaternion} returns this
 */
proto.aps.Quaternion.prototype.setW = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aps.Pose.prototype.toObject = function(opt_includeInstance) {
  return proto.aps.Pose.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aps.Pose} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aps.Pose.toObject = function(includeInstance, msg) {
  var f, obj = {
    position: (f = msg.getPosition()) && proto.aps.Vec3.toObject(includeInstance, f),
    orientation: (f = msg.getOrientation()) && proto.aps.Quaternion.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aps.Pose}
 */
proto.aps.Pose.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aps.Pose;
  return proto.aps.Pose.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aps.Pose} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aps.Pose}
 */
proto.aps.Pose.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.aps.Vec3;
      reader.readMessage(value,proto.aps.Vec3.deserializeBinaryFromReader);
      msg.setPosition(value);
      break;
    case 2:
      var value = new proto.aps.Quaternion;
      reader.readMessage(value,proto.aps.Quaternion.deserializeBinaryFromReader);
      msg.setOrientation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aps.Pose.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aps.Pose.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aps.Pose} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aps.Pose.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPosition();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.aps.Vec3.serializeBinaryToWriter
    );
  }
  f = message.getOrientation();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.aps.Quaternion.serializeBinaryToWriter
    );
  }
};


/**
 * optional Vec3 position = 1;
 * @return {?proto.aps.Vec3}
 */
proto.aps.Pose.prototype.getPosition = function() {
  return /** @type{?proto.aps.Vec3} */ (
    jspb.Message.getWrapperField(this, proto.aps.Vec3, 1));
};


/**
 * @param {?proto.aps.Vec3|undefined} value
 * @return {!proto.aps.Pose} returns this
*/
proto.aps.Pose.prototype.setPosition = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aps.Pose} returns this
 */
proto.aps.Pose.prototype.clearPosition = function() {
  return this.setPosition(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aps.Pose.prototype.hasPosition = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Quaternion orientation = 2;
 * @return {?proto.aps.Quaternion}
 */
proto.aps.Pose.prototype.getOrientation = function() {
  return /** @type{?proto.aps.Quaternion} */ (
    jspb.Message.getWrapperField(this, proto.aps.Quaternion, 2));
};


/**
 * @param {?proto.aps.Quaternion|undefined} value
 * @return {!proto.aps.Pose} returns this
*/
proto.aps.Pose.prototype.setOrientation = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aps.Pose} returns this
 */
proto.aps.Pose.prototype.clearOrientation = function() {
  return this.setOrientation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aps.Pose.prototype.hasOrientation = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aps.ProcessReturn.prototype.toObject = function(opt_includeInstance) {
  return proto.aps.ProcessReturn.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aps.ProcessReturn} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aps.ProcessReturn.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, 0),
    msg: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aps.ProcessReturn}
 */
proto.aps.ProcessReturn.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aps.ProcessReturn;
  return proto.aps.ProcessReturn.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aps.ProcessReturn} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aps.ProcessReturn}
 */
proto.aps.ProcessReturn.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.aps.ProcessStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aps.ProcessReturn.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aps.ProcessReturn.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aps.ProcessReturn} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aps.ProcessReturn.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMsg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional ProcessStatus status = 1;
 * @return {!proto.aps.ProcessStatus}
 */
proto.aps.ProcessReturn.prototype.getStatus = function() {
  return /** @type {!proto.aps.ProcessStatus} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.aps.ProcessStatus} value
 * @return {!proto.aps.ProcessReturn} returns this
 */
proto.aps.ProcessReturn.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string msg = 2;
 * @return {string}
 */
proto.aps.ProcessReturn.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.aps.ProcessReturn} returns this
 */
proto.aps.ProcessReturn.prototype.setMsg = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aps.Edge.prototype.toObject = function(opt_includeInstance) {
  return proto.aps.Edge.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aps.Edge} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aps.Edge.toObject = function(includeInstance, msg) {
  var f, obj = {
    refScanId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    curScanId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    refScanTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    curScanTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    initMatchPq: (f = msg.getInitMatchPq()) && proto.aps.Pose.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aps.Edge}
 */
proto.aps.Edge.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aps.Edge;
  return proto.aps.Edge.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aps.Edge} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aps.Edge}
 */
proto.aps.Edge.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRefScanId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCurScanId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRefScanTime(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCurScanTime(value);
      break;
    case 5:
      var value = new proto.aps.Pose;
      reader.readMessage(value,proto.aps.Pose.deserializeBinaryFromReader);
      msg.setInitMatchPq(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aps.Edge.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aps.Edge.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aps.Edge} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aps.Edge.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRefScanId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCurScanId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getRefScanTime();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getCurScanTime();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getInitMatchPq();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.aps.Pose.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 ref_scan_id = 1;
 * @return {number}
 */
proto.aps.Edge.prototype.getRefScanId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.aps.Edge} returns this
 */
proto.aps.Edge.prototype.setRefScanId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 cur_scan_id = 2;
 * @return {number}
 */
proto.aps.Edge.prototype.getCurScanId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.aps.Edge} returns this
 */
proto.aps.Edge.prototype.setCurScanId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional double ref_scan_time = 3;
 * @return {number}
 */
proto.aps.Edge.prototype.getRefScanTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.aps.Edge} returns this
 */
proto.aps.Edge.prototype.setRefScanTime = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double cur_scan_time = 4;
 * @return {number}
 */
proto.aps.Edge.prototype.getCurScanTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.aps.Edge} returns this
 */
proto.aps.Edge.prototype.setCurScanTime = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional Pose init_match_pq = 5;
 * @return {?proto.aps.Pose}
 */
proto.aps.Edge.prototype.getInitMatchPq = function() {
  return /** @type{?proto.aps.Pose} */ (
    jspb.Message.getWrapperField(this, proto.aps.Pose, 5));
};


/**
 * @param {?proto.aps.Pose|undefined} value
 * @return {!proto.aps.Edge} returns this
*/
proto.aps.Edge.prototype.setInitMatchPq = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aps.Edge} returns this
 */
proto.aps.Edge.prototype.clearInitMatchPq = function() {
  return this.setInitMatchPq(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aps.Edge.prototype.hasInitMatchPq = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aps.apsConvertImportParam.prototype.toObject = function(opt_includeInstance) {
  return proto.aps.apsConvertImportParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aps.apsConvertImportParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aps.apsConvertImportParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    datadir: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amapname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    bagname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    imginfofilename: jspb.Message.getFieldWithDefault(msg, 4, ""),
    cfgname: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aps.apsConvertImportParam}
 */
proto.aps.apsConvertImportParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aps.apsConvertImportParam;
  return proto.aps.apsConvertImportParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aps.apsConvertImportParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aps.apsConvertImportParam}
 */
proto.aps.apsConvertImportParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatadir(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmapname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBagname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setImginfofilename(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCfgname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aps.apsConvertImportParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aps.apsConvertImportParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aps.apsConvertImportParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aps.apsConvertImportParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatadir();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmapname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBagname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getImginfofilename();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCfgname();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string dataDir = 1;
 * @return {string}
 */
proto.aps.apsConvertImportParam.prototype.getDatadir = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.aps.apsConvertImportParam} returns this
 */
proto.aps.apsConvertImportParam.prototype.setDatadir = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string amapName = 2;
 * @return {string}
 */
proto.aps.apsConvertImportParam.prototype.getAmapname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.aps.apsConvertImportParam} returns this
 */
proto.aps.apsConvertImportParam.prototype.setAmapname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string bagName = 3;
 * @return {string}
 */
proto.aps.apsConvertImportParam.prototype.getBagname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.aps.apsConvertImportParam} returns this
 */
proto.aps.apsConvertImportParam.prototype.setBagname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string imgInfoFileName = 4;
 * @return {string}
 */
proto.aps.apsConvertImportParam.prototype.getImginfofilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.aps.apsConvertImportParam} returns this
 */
proto.aps.apsConvertImportParam.prototype.setImginfofilename = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string cfgName = 5;
 * @return {string}
 */
proto.aps.apsConvertImportParam.prototype.getCfgname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.aps.apsConvertImportParam} returns this
 */
proto.aps.apsConvertImportParam.prototype.setCfgname = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aps.apsConvertExportParam.prototype.toObject = function(opt_includeInstance) {
  return proto.aps.apsConvertExportParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aps.apsConvertExportParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aps.apsConvertExportParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    datadir: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amapname: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aps.apsConvertExportParam}
 */
proto.aps.apsConvertExportParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aps.apsConvertExportParam;
  return proto.aps.apsConvertExportParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aps.apsConvertExportParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aps.apsConvertExportParam}
 */
proto.aps.apsConvertExportParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatadir(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmapname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aps.apsConvertExportParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aps.apsConvertExportParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aps.apsConvertExportParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aps.apsConvertExportParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatadir();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmapname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string dataDir = 1;
 * @return {string}
 */
proto.aps.apsConvertExportParam.prototype.getDatadir = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.aps.apsConvertExportParam} returns this
 */
proto.aps.apsConvertExportParam.prototype.setDatadir = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string amapName = 2;
 * @return {string}
 */
proto.aps.apsConvertExportParam.prototype.getAmapname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.aps.apsConvertExportParam} returns this
 */
proto.aps.apsConvertExportParam.prototype.setAmapname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aps.apsSaveProjectParam.prototype.toObject = function(opt_includeInstance) {
  return proto.aps.apsSaveProjectParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aps.apsSaveProjectParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aps.apsSaveProjectParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    datadir: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amapname: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aps.apsSaveProjectParam}
 */
proto.aps.apsSaveProjectParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aps.apsSaveProjectParam;
  return proto.aps.apsSaveProjectParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aps.apsSaveProjectParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aps.apsSaveProjectParam}
 */
proto.aps.apsSaveProjectParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatadir(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmapname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aps.apsSaveProjectParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aps.apsSaveProjectParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aps.apsSaveProjectParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aps.apsSaveProjectParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatadir();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmapname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string dataDir = 1;
 * @return {string}
 */
proto.aps.apsSaveProjectParam.prototype.getDatadir = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.aps.apsSaveProjectParam} returns this
 */
proto.aps.apsSaveProjectParam.prototype.setDatadir = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string amapName = 2;
 * @return {string}
 */
proto.aps.apsSaveProjectParam.prototype.getAmapname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.aps.apsSaveProjectParam} returns this
 */
proto.aps.apsSaveProjectParam.prototype.setAmapname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aps.apsLoopManualSelectParam.prototype.toObject = function(opt_includeInstance) {
  return proto.aps.apsLoopManualSelectParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aps.apsLoopManualSelectParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aps.apsLoopManualSelectParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    datadir: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amapname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    refScanId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    curScanId: jspb.Message.getFieldWithDefault(msg, 4, 0),
    refScanTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    curScanTime: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    processReturn: (f = msg.getProcessReturn()) && proto.aps.ProcessReturn.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aps.apsLoopManualSelectParam}
 */
proto.aps.apsLoopManualSelectParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aps.apsLoopManualSelectParam;
  return proto.aps.apsLoopManualSelectParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aps.apsLoopManualSelectParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aps.apsLoopManualSelectParam}
 */
proto.aps.apsLoopManualSelectParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatadir(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmapname(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRefScanId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCurScanId(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRefScanTime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCurScanTime(value);
      break;
    case 7:
      var value = new proto.aps.ProcessReturn;
      reader.readMessage(value,proto.aps.ProcessReturn.deserializeBinaryFromReader);
      msg.setProcessReturn(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aps.apsLoopManualSelectParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aps.apsLoopManualSelectParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aps.apsLoopManualSelectParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aps.apsLoopManualSelectParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatadir();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmapname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRefScanId();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getCurScanId();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getRefScanTime();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getCurScanTime();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getProcessReturn();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.aps.ProcessReturn.serializeBinaryToWriter
    );
  }
};


/**
 * optional string dataDir = 1;
 * @return {string}
 */
proto.aps.apsLoopManualSelectParam.prototype.getDatadir = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.aps.apsLoopManualSelectParam} returns this
 */
proto.aps.apsLoopManualSelectParam.prototype.setDatadir = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string amapName = 2;
 * @return {string}
 */
proto.aps.apsLoopManualSelectParam.prototype.getAmapname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.aps.apsLoopManualSelectParam} returns this
 */
proto.aps.apsLoopManualSelectParam.prototype.setAmapname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 ref_scan_id = 3;
 * @return {number}
 */
proto.aps.apsLoopManualSelectParam.prototype.getRefScanId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.aps.apsLoopManualSelectParam} returns this
 */
proto.aps.apsLoopManualSelectParam.prototype.setRefScanId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 cur_scan_id = 4;
 * @return {number}
 */
proto.aps.apsLoopManualSelectParam.prototype.getCurScanId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.aps.apsLoopManualSelectParam} returns this
 */
proto.aps.apsLoopManualSelectParam.prototype.setCurScanId = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional double ref_scan_time = 5;
 * @return {number}
 */
proto.aps.apsLoopManualSelectParam.prototype.getRefScanTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.aps.apsLoopManualSelectParam} returns this
 */
proto.aps.apsLoopManualSelectParam.prototype.setRefScanTime = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double cur_scan_time = 6;
 * @return {number}
 */
proto.aps.apsLoopManualSelectParam.prototype.getCurScanTime = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.aps.apsLoopManualSelectParam} returns this
 */
proto.aps.apsLoopManualSelectParam.prototype.setCurScanTime = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional ProcessReturn process_return = 7;
 * @return {?proto.aps.ProcessReturn}
 */
proto.aps.apsLoopManualSelectParam.prototype.getProcessReturn = function() {
  return /** @type{?proto.aps.ProcessReturn} */ (
    jspb.Message.getWrapperField(this, proto.aps.ProcessReturn, 7));
};


/**
 * @param {?proto.aps.ProcessReturn|undefined} value
 * @return {!proto.aps.apsLoopManualSelectParam} returns this
*/
proto.aps.apsLoopManualSelectParam.prototype.setProcessReturn = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aps.apsLoopManualSelectParam} returns this
 */
proto.aps.apsLoopManualSelectParam.prototype.clearProcessReturn = function() {
  return this.setProcessReturn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aps.apsLoopManualSelectParam.prototype.hasProcessReturn = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aps.apsLoopManualMatchParam.prototype.toObject = function(opt_includeInstance) {
  return proto.aps.apsLoopManualMatchParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aps.apsLoopManualMatchParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aps.apsLoopManualMatchParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    datadir: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amapname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    edge: (f = msg.getEdge()) && proto.aps.Edge.toObject(includeInstance, f),
    processReturn: (f = msg.getProcessReturn()) && proto.aps.ProcessReturn.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aps.apsLoopManualMatchParam}
 */
proto.aps.apsLoopManualMatchParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aps.apsLoopManualMatchParam;
  return proto.aps.apsLoopManualMatchParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aps.apsLoopManualMatchParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aps.apsLoopManualMatchParam}
 */
proto.aps.apsLoopManualMatchParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatadir(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmapname(value);
      break;
    case 3:
      var value = new proto.aps.Edge;
      reader.readMessage(value,proto.aps.Edge.deserializeBinaryFromReader);
      msg.setEdge(value);
      break;
    case 4:
      var value = new proto.aps.ProcessReturn;
      reader.readMessage(value,proto.aps.ProcessReturn.deserializeBinaryFromReader);
      msg.setProcessReturn(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aps.apsLoopManualMatchParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aps.apsLoopManualMatchParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aps.apsLoopManualMatchParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aps.apsLoopManualMatchParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatadir();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmapname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEdge();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.aps.Edge.serializeBinaryToWriter
    );
  }
  f = message.getProcessReturn();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.aps.ProcessReturn.serializeBinaryToWriter
    );
  }
};


/**
 * optional string dataDir = 1;
 * @return {string}
 */
proto.aps.apsLoopManualMatchParam.prototype.getDatadir = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.aps.apsLoopManualMatchParam} returns this
 */
proto.aps.apsLoopManualMatchParam.prototype.setDatadir = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string amapName = 2;
 * @return {string}
 */
proto.aps.apsLoopManualMatchParam.prototype.getAmapname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.aps.apsLoopManualMatchParam} returns this
 */
proto.aps.apsLoopManualMatchParam.prototype.setAmapname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Edge edge = 3;
 * @return {?proto.aps.Edge}
 */
proto.aps.apsLoopManualMatchParam.prototype.getEdge = function() {
  return /** @type{?proto.aps.Edge} */ (
    jspb.Message.getWrapperField(this, proto.aps.Edge, 3));
};


/**
 * @param {?proto.aps.Edge|undefined} value
 * @return {!proto.aps.apsLoopManualMatchParam} returns this
*/
proto.aps.apsLoopManualMatchParam.prototype.setEdge = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aps.apsLoopManualMatchParam} returns this
 */
proto.aps.apsLoopManualMatchParam.prototype.clearEdge = function() {
  return this.setEdge(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aps.apsLoopManualMatchParam.prototype.hasEdge = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ProcessReturn process_return = 4;
 * @return {?proto.aps.ProcessReturn}
 */
proto.aps.apsLoopManualMatchParam.prototype.getProcessReturn = function() {
  return /** @type{?proto.aps.ProcessReturn} */ (
    jspb.Message.getWrapperField(this, proto.aps.ProcessReturn, 4));
};


/**
 * @param {?proto.aps.ProcessReturn|undefined} value
 * @return {!proto.aps.apsLoopManualMatchParam} returns this
*/
proto.aps.apsLoopManualMatchParam.prototype.setProcessReturn = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aps.apsLoopManualMatchParam} returns this
 */
proto.aps.apsLoopManualMatchParam.prototype.clearProcessReturn = function() {
  return this.setProcessReturn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aps.apsLoopManualMatchParam.prototype.hasProcessReturn = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aps.apsLoopManualOptimizeParam.prototype.toObject = function(opt_includeInstance) {
  return proto.aps.apsLoopManualOptimizeParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aps.apsLoopManualOptimizeParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aps.apsLoopManualOptimizeParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    datadir: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amapname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    edgename: jspb.Message.getFieldWithDefault(msg, 3, ""),
    processReturn: (f = msg.getProcessReturn()) && proto.aps.ProcessReturn.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aps.apsLoopManualOptimizeParam}
 */
proto.aps.apsLoopManualOptimizeParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aps.apsLoopManualOptimizeParam;
  return proto.aps.apsLoopManualOptimizeParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aps.apsLoopManualOptimizeParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aps.apsLoopManualOptimizeParam}
 */
proto.aps.apsLoopManualOptimizeParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatadir(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmapname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEdgename(value);
      break;
    case 4:
      var value = new proto.aps.ProcessReturn;
      reader.readMessage(value,proto.aps.ProcessReturn.deserializeBinaryFromReader);
      msg.setProcessReturn(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aps.apsLoopManualOptimizeParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aps.apsLoopManualOptimizeParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aps.apsLoopManualOptimizeParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aps.apsLoopManualOptimizeParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatadir();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmapname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEdgename();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProcessReturn();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.aps.ProcessReturn.serializeBinaryToWriter
    );
  }
};


/**
 * optional string dataDir = 1;
 * @return {string}
 */
proto.aps.apsLoopManualOptimizeParam.prototype.getDatadir = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.aps.apsLoopManualOptimizeParam} returns this
 */
proto.aps.apsLoopManualOptimizeParam.prototype.setDatadir = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string amapName = 2;
 * @return {string}
 */
proto.aps.apsLoopManualOptimizeParam.prototype.getAmapname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.aps.apsLoopManualOptimizeParam} returns this
 */
proto.aps.apsLoopManualOptimizeParam.prototype.setAmapname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string edgeName = 3;
 * @return {string}
 */
proto.aps.apsLoopManualOptimizeParam.prototype.getEdgename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.aps.apsLoopManualOptimizeParam} returns this
 */
proto.aps.apsLoopManualOptimizeParam.prototype.setEdgename = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ProcessReturn process_return = 4;
 * @return {?proto.aps.ProcessReturn}
 */
proto.aps.apsLoopManualOptimizeParam.prototype.getProcessReturn = function() {
  return /** @type{?proto.aps.ProcessReturn} */ (
    jspb.Message.getWrapperField(this, proto.aps.ProcessReturn, 4));
};


/**
 * @param {?proto.aps.ProcessReturn|undefined} value
 * @return {!proto.aps.apsLoopManualOptimizeParam} returns this
*/
proto.aps.apsLoopManualOptimizeParam.prototype.setProcessReturn = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aps.apsLoopManualOptimizeParam} returns this
 */
proto.aps.apsLoopManualOptimizeParam.prototype.clearProcessReturn = function() {
  return this.setProcessReturn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aps.apsLoopManualOptimizeParam.prototype.hasProcessReturn = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aps.apsLoopAutoSearchParam.prototype.toObject = function(opt_includeInstance) {
  return proto.aps.apsLoopAutoSearchParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aps.apsLoopAutoSearchParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aps.apsLoopAutoSearchParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    datadir: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amapname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    edgename: jspb.Message.getFieldWithDefault(msg, 3, ""),
    processReturn: (f = msg.getProcessReturn()) && proto.aps.ProcessReturn.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aps.apsLoopAutoSearchParam}
 */
proto.aps.apsLoopAutoSearchParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aps.apsLoopAutoSearchParam;
  return proto.aps.apsLoopAutoSearchParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aps.apsLoopAutoSearchParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aps.apsLoopAutoSearchParam}
 */
proto.aps.apsLoopAutoSearchParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatadir(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmapname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEdgename(value);
      break;
    case 4:
      var value = new proto.aps.ProcessReturn;
      reader.readMessage(value,proto.aps.ProcessReturn.deserializeBinaryFromReader);
      msg.setProcessReturn(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aps.apsLoopAutoSearchParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aps.apsLoopAutoSearchParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aps.apsLoopAutoSearchParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aps.apsLoopAutoSearchParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatadir();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmapname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEdgename();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProcessReturn();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.aps.ProcessReturn.serializeBinaryToWriter
    );
  }
};


/**
 * optional string dataDir = 1;
 * @return {string}
 */
proto.aps.apsLoopAutoSearchParam.prototype.getDatadir = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.aps.apsLoopAutoSearchParam} returns this
 */
proto.aps.apsLoopAutoSearchParam.prototype.setDatadir = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string amapName = 2;
 * @return {string}
 */
proto.aps.apsLoopAutoSearchParam.prototype.getAmapname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.aps.apsLoopAutoSearchParam} returns this
 */
proto.aps.apsLoopAutoSearchParam.prototype.setAmapname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string edgeName = 3;
 * @return {string}
 */
proto.aps.apsLoopAutoSearchParam.prototype.getEdgename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.aps.apsLoopAutoSearchParam} returns this
 */
proto.aps.apsLoopAutoSearchParam.prototype.setEdgename = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ProcessReturn process_return = 4;
 * @return {?proto.aps.ProcessReturn}
 */
proto.aps.apsLoopAutoSearchParam.prototype.getProcessReturn = function() {
  return /** @type{?proto.aps.ProcessReturn} */ (
    jspb.Message.getWrapperField(this, proto.aps.ProcessReturn, 4));
};


/**
 * @param {?proto.aps.ProcessReturn|undefined} value
 * @return {!proto.aps.apsLoopAutoSearchParam} returns this
*/
proto.aps.apsLoopAutoSearchParam.prototype.setProcessReturn = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aps.apsLoopAutoSearchParam} returns this
 */
proto.aps.apsLoopAutoSearchParam.prototype.clearProcessReturn = function() {
  return this.setProcessReturn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aps.apsLoopAutoSearchParam.prototype.hasProcessReturn = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aps.apsGlobalControlParam.prototype.toObject = function(opt_includeInstance) {
  return proto.aps.apsGlobalControlParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aps.apsGlobalControlParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aps.apsGlobalControlParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    datadir: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amapname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    controlname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    processReturn: (f = msg.getProcessReturn()) && proto.aps.ProcessReturn.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aps.apsGlobalControlParam}
 */
proto.aps.apsGlobalControlParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aps.apsGlobalControlParam;
  return proto.aps.apsGlobalControlParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aps.apsGlobalControlParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aps.apsGlobalControlParam}
 */
proto.aps.apsGlobalControlParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatadir(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmapname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setControlname(value);
      break;
    case 4:
      var value = new proto.aps.ProcessReturn;
      reader.readMessage(value,proto.aps.ProcessReturn.deserializeBinaryFromReader);
      msg.setProcessReturn(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aps.apsGlobalControlParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aps.apsGlobalControlParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aps.apsGlobalControlParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aps.apsGlobalControlParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatadir();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmapname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getControlname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProcessReturn();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.aps.ProcessReturn.serializeBinaryToWriter
    );
  }
};


/**
 * optional string dataDir = 1;
 * @return {string}
 */
proto.aps.apsGlobalControlParam.prototype.getDatadir = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.aps.apsGlobalControlParam} returns this
 */
proto.aps.apsGlobalControlParam.prototype.setDatadir = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string amapName = 2;
 * @return {string}
 */
proto.aps.apsGlobalControlParam.prototype.getAmapname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.aps.apsGlobalControlParam} returns this
 */
proto.aps.apsGlobalControlParam.prototype.setAmapname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string controlName = 3;
 * @return {string}
 */
proto.aps.apsGlobalControlParam.prototype.getControlname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.aps.apsGlobalControlParam} returns this
 */
proto.aps.apsGlobalControlParam.prototype.setControlname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ProcessReturn process_return = 4;
 * @return {?proto.aps.ProcessReturn}
 */
proto.aps.apsGlobalControlParam.prototype.getProcessReturn = function() {
  return /** @type{?proto.aps.ProcessReturn} */ (
    jspb.Message.getWrapperField(this, proto.aps.ProcessReturn, 4));
};


/**
 * @param {?proto.aps.ProcessReturn|undefined} value
 * @return {!proto.aps.apsGlobalControlParam} returns this
*/
proto.aps.apsGlobalControlParam.prototype.setProcessReturn = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aps.apsGlobalControlParam} returns this
 */
proto.aps.apsGlobalControlParam.prototype.clearProcessReturn = function() {
  return this.setProcessReturn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aps.apsGlobalControlParam.prototype.hasProcessReturn = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aps.apsGlobalRTKParam.prototype.toObject = function(opt_includeInstance) {
  return proto.aps.apsGlobalRTKParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aps.apsGlobalRTKParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aps.apsGlobalRTKParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    datadir: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amapname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    bagname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    cfgname: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aps.apsGlobalRTKParam}
 */
proto.aps.apsGlobalRTKParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aps.apsGlobalRTKParam;
  return proto.aps.apsGlobalRTKParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aps.apsGlobalRTKParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aps.apsGlobalRTKParam}
 */
proto.aps.apsGlobalRTKParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatadir(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmapname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBagname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCfgname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aps.apsGlobalRTKParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aps.apsGlobalRTKParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aps.apsGlobalRTKParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aps.apsGlobalRTKParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatadir();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmapname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBagname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCfgname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string dataDir = 1;
 * @return {string}
 */
proto.aps.apsGlobalRTKParam.prototype.getDatadir = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.aps.apsGlobalRTKParam} returns this
 */
proto.aps.apsGlobalRTKParam.prototype.setDatadir = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string amapName = 2;
 * @return {string}
 */
proto.aps.apsGlobalRTKParam.prototype.getAmapname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.aps.apsGlobalRTKParam} returns this
 */
proto.aps.apsGlobalRTKParam.prototype.setAmapname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string bagName = 3;
 * @return {string}
 */
proto.aps.apsGlobalRTKParam.prototype.getBagname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.aps.apsGlobalRTKParam} returns this
 */
proto.aps.apsGlobalRTKParam.prototype.setBagname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string cfgName = 4;
 * @return {string}
 */
proto.aps.apsGlobalRTKParam.prototype.getCfgname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.aps.apsGlobalRTKParam} returns this
 */
proto.aps.apsGlobalRTKParam.prototype.setCfgname = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aps.apsColorizeAutoParam.prototype.toObject = function(opt_includeInstance) {
  return proto.aps.apsColorizeAutoParam.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aps.apsColorizeAutoParam} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aps.apsColorizeAutoParam.toObject = function(includeInstance, msg) {
  var f, obj = {
    datadir: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amapname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    bagname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    cfgname: jspb.Message.getFieldWithDefault(msg, 4, ""),
    processReturn: (f = msg.getProcessReturn()) && proto.aps.ProcessReturn.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aps.apsColorizeAutoParam}
 */
proto.aps.apsColorizeAutoParam.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aps.apsColorizeAutoParam;
  return proto.aps.apsColorizeAutoParam.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aps.apsColorizeAutoParam} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aps.apsColorizeAutoParam}
 */
proto.aps.apsColorizeAutoParam.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatadir(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmapname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBagname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCfgname(value);
      break;
    case 5:
      var value = new proto.aps.ProcessReturn;
      reader.readMessage(value,proto.aps.ProcessReturn.deserializeBinaryFromReader);
      msg.setProcessReturn(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aps.apsColorizeAutoParam.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aps.apsColorizeAutoParam.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aps.apsColorizeAutoParam} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aps.apsColorizeAutoParam.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatadir();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmapname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBagname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCfgname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getProcessReturn();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.aps.ProcessReturn.serializeBinaryToWriter
    );
  }
};


/**
 * optional string dataDir = 1;
 * @return {string}
 */
proto.aps.apsColorizeAutoParam.prototype.getDatadir = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.aps.apsColorizeAutoParam} returns this
 */
proto.aps.apsColorizeAutoParam.prototype.setDatadir = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string amapName = 2;
 * @return {string}
 */
proto.aps.apsColorizeAutoParam.prototype.getAmapname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.aps.apsColorizeAutoParam} returns this
 */
proto.aps.apsColorizeAutoParam.prototype.setAmapname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string bagName = 3;
 * @return {string}
 */
proto.aps.apsColorizeAutoParam.prototype.getBagname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.aps.apsColorizeAutoParam} returns this
 */
proto.aps.apsColorizeAutoParam.prototype.setBagname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string cfgName = 4;
 * @return {string}
 */
proto.aps.apsColorizeAutoParam.prototype.getCfgname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.aps.apsColorizeAutoParam} returns this
 */
proto.aps.apsColorizeAutoParam.prototype.setCfgname = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional ProcessReturn process_return = 5;
 * @return {?proto.aps.ProcessReturn}
 */
proto.aps.apsColorizeAutoParam.prototype.getProcessReturn = function() {
  return /** @type{?proto.aps.ProcessReturn} */ (
    jspb.Message.getWrapperField(this, proto.aps.ProcessReturn, 5));
};


/**
 * @param {?proto.aps.ProcessReturn|undefined} value
 * @return {!proto.aps.apsColorizeAutoParam} returns this
*/
proto.aps.apsColorizeAutoParam.prototype.setProcessReturn = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aps.apsColorizeAutoParam} returns this
 */
proto.aps.apsColorizeAutoParam.prototype.clearProcessReturn = function() {
  return this.setProcessReturn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aps.apsColorizeAutoParam.prototype.hasProcessReturn = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.aps.apsFullMsg.prototype.toObject = function(opt_includeInstance) {
  return proto.aps.apsFullMsg.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.aps.apsFullMsg} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aps.apsFullMsg.toObject = function(includeInstance, msg) {
  var f, obj = {
    topicName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    topicType: jspb.Message.getFieldWithDefault(msg, 2, 0),
    convertImportParam: (f = msg.getConvertImportParam()) && proto.aps.apsConvertImportParam.toObject(includeInstance, f),
    convertExportParam: (f = msg.getConvertExportParam()) && proto.aps.apsConvertExportParam.toObject(includeInstance, f),
    savePrjectParam: (f = msg.getSavePrjectParam()) && proto.aps.apsSaveProjectParam.toObject(includeInstance, f),
    loopManualSelectParam: (f = msg.getLoopManualSelectParam()) && proto.aps.apsLoopManualSelectParam.toObject(includeInstance, f),
    loopManualMatchParam: (f = msg.getLoopManualMatchParam()) && proto.aps.apsLoopManualMatchParam.toObject(includeInstance, f),
    loopManualOptimizeParam: (f = msg.getLoopManualOptimizeParam()) && proto.aps.apsLoopManualOptimizeParam.toObject(includeInstance, f),
    loopAutoSearchParam: (f = msg.getLoopAutoSearchParam()) && proto.aps.apsLoopAutoSearchParam.toObject(includeInstance, f),
    globalControlParam: (f = msg.getGlobalControlParam()) && proto.aps.apsGlobalControlParam.toObject(includeInstance, f),
    globalRtkParam: (f = msg.getGlobalRtkParam()) && proto.aps.apsGlobalRTKParam.toObject(includeInstance, f),
    colorizeAutoParam: (f = msg.getColorizeAutoParam()) && proto.aps.apsColorizeAutoParam.toObject(includeInstance, f),
    processStatus: jspb.Message.getFieldWithDefault(msg, 13, ""),
    processRatio: jspb.Message.getFloatingPointFieldWithDefault(msg, 14, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.aps.apsFullMsg}
 */
proto.aps.apsFullMsg.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.aps.apsFullMsg;
  return proto.aps.apsFullMsg.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.aps.apsFullMsg} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.aps.apsFullMsg}
 */
proto.aps.apsFullMsg.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTopicName(value);
      break;
    case 2:
      var value = /** @type {!proto.aps.MessageType} */ (reader.readEnum());
      msg.setTopicType(value);
      break;
    case 3:
      var value = new proto.aps.apsConvertImportParam;
      reader.readMessage(value,proto.aps.apsConvertImportParam.deserializeBinaryFromReader);
      msg.setConvertImportParam(value);
      break;
    case 4:
      var value = new proto.aps.apsConvertExportParam;
      reader.readMessage(value,proto.aps.apsConvertExportParam.deserializeBinaryFromReader);
      msg.setConvertExportParam(value);
      break;
    case 5:
      var value = new proto.aps.apsSaveProjectParam;
      reader.readMessage(value,proto.aps.apsSaveProjectParam.deserializeBinaryFromReader);
      msg.setSavePrjectParam(value);
      break;
    case 6:
      var value = new proto.aps.apsLoopManualSelectParam;
      reader.readMessage(value,proto.aps.apsLoopManualSelectParam.deserializeBinaryFromReader);
      msg.setLoopManualSelectParam(value);
      break;
    case 7:
      var value = new proto.aps.apsLoopManualMatchParam;
      reader.readMessage(value,proto.aps.apsLoopManualMatchParam.deserializeBinaryFromReader);
      msg.setLoopManualMatchParam(value);
      break;
    case 8:
      var value = new proto.aps.apsLoopManualOptimizeParam;
      reader.readMessage(value,proto.aps.apsLoopManualOptimizeParam.deserializeBinaryFromReader);
      msg.setLoopManualOptimizeParam(value);
      break;
    case 9:
      var value = new proto.aps.apsLoopAutoSearchParam;
      reader.readMessage(value,proto.aps.apsLoopAutoSearchParam.deserializeBinaryFromReader);
      msg.setLoopAutoSearchParam(value);
      break;
    case 10:
      var value = new proto.aps.apsGlobalControlParam;
      reader.readMessage(value,proto.aps.apsGlobalControlParam.deserializeBinaryFromReader);
      msg.setGlobalControlParam(value);
      break;
    case 11:
      var value = new proto.aps.apsGlobalRTKParam;
      reader.readMessage(value,proto.aps.apsGlobalRTKParam.deserializeBinaryFromReader);
      msg.setGlobalRtkParam(value);
      break;
    case 12:
      var value = new proto.aps.apsColorizeAutoParam;
      reader.readMessage(value,proto.aps.apsColorizeAutoParam.deserializeBinaryFromReader);
      msg.setColorizeAutoParam(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setProcessStatus(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setProcessRatio(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.aps.apsFullMsg.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.aps.apsFullMsg.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.aps.apsFullMsg} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.aps.apsFullMsg.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTopicName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTopicType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getConvertImportParam();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.aps.apsConvertImportParam.serializeBinaryToWriter
    );
  }
  f = message.getConvertExportParam();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.aps.apsConvertExportParam.serializeBinaryToWriter
    );
  }
  f = message.getSavePrjectParam();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.aps.apsSaveProjectParam.serializeBinaryToWriter
    );
  }
  f = message.getLoopManualSelectParam();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.aps.apsLoopManualSelectParam.serializeBinaryToWriter
    );
  }
  f = message.getLoopManualMatchParam();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.aps.apsLoopManualMatchParam.serializeBinaryToWriter
    );
  }
  f = message.getLoopManualOptimizeParam();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.aps.apsLoopManualOptimizeParam.serializeBinaryToWriter
    );
  }
  f = message.getLoopAutoSearchParam();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.aps.apsLoopAutoSearchParam.serializeBinaryToWriter
    );
  }
  f = message.getGlobalControlParam();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.aps.apsGlobalControlParam.serializeBinaryToWriter
    );
  }
  f = message.getGlobalRtkParam();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.aps.apsGlobalRTKParam.serializeBinaryToWriter
    );
  }
  f = message.getColorizeAutoParam();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.aps.apsColorizeAutoParam.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeDouble(
      14,
      f
    );
  }
};


/**
 * optional string topic_name = 1;
 * @return {string}
 */
proto.aps.apsFullMsg.prototype.getTopicName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.aps.apsFullMsg} returns this
 */
proto.aps.apsFullMsg.prototype.setTopicName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional MessageType topic_type = 2;
 * @return {!proto.aps.MessageType}
 */
proto.aps.apsFullMsg.prototype.getTopicType = function() {
  return /** @type {!proto.aps.MessageType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.aps.MessageType} value
 * @return {!proto.aps.apsFullMsg} returns this
 */
proto.aps.apsFullMsg.prototype.setTopicType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional apsConvertImportParam convert_import_param = 3;
 * @return {?proto.aps.apsConvertImportParam}
 */
proto.aps.apsFullMsg.prototype.getConvertImportParam = function() {
  return /** @type{?proto.aps.apsConvertImportParam} */ (
    jspb.Message.getWrapperField(this, proto.aps.apsConvertImportParam, 3));
};


/**
 * @param {?proto.aps.apsConvertImportParam|undefined} value
 * @return {!proto.aps.apsFullMsg} returns this
*/
proto.aps.apsFullMsg.prototype.setConvertImportParam = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aps.apsFullMsg} returns this
 */
proto.aps.apsFullMsg.prototype.clearConvertImportParam = function() {
  return this.setConvertImportParam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aps.apsFullMsg.prototype.hasConvertImportParam = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional apsConvertExportParam convert_export_param = 4;
 * @return {?proto.aps.apsConvertExportParam}
 */
proto.aps.apsFullMsg.prototype.getConvertExportParam = function() {
  return /** @type{?proto.aps.apsConvertExportParam} */ (
    jspb.Message.getWrapperField(this, proto.aps.apsConvertExportParam, 4));
};


/**
 * @param {?proto.aps.apsConvertExportParam|undefined} value
 * @return {!proto.aps.apsFullMsg} returns this
*/
proto.aps.apsFullMsg.prototype.setConvertExportParam = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aps.apsFullMsg} returns this
 */
proto.aps.apsFullMsg.prototype.clearConvertExportParam = function() {
  return this.setConvertExportParam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aps.apsFullMsg.prototype.hasConvertExportParam = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional apsSaveProjectParam save_prject_param = 5;
 * @return {?proto.aps.apsSaveProjectParam}
 */
proto.aps.apsFullMsg.prototype.getSavePrjectParam = function() {
  return /** @type{?proto.aps.apsSaveProjectParam} */ (
    jspb.Message.getWrapperField(this, proto.aps.apsSaveProjectParam, 5));
};


/**
 * @param {?proto.aps.apsSaveProjectParam|undefined} value
 * @return {!proto.aps.apsFullMsg} returns this
*/
proto.aps.apsFullMsg.prototype.setSavePrjectParam = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aps.apsFullMsg} returns this
 */
proto.aps.apsFullMsg.prototype.clearSavePrjectParam = function() {
  return this.setSavePrjectParam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aps.apsFullMsg.prototype.hasSavePrjectParam = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional apsLoopManualSelectParam loop_manual_select_param = 6;
 * @return {?proto.aps.apsLoopManualSelectParam}
 */
proto.aps.apsFullMsg.prototype.getLoopManualSelectParam = function() {
  return /** @type{?proto.aps.apsLoopManualSelectParam} */ (
    jspb.Message.getWrapperField(this, proto.aps.apsLoopManualSelectParam, 6));
};


/**
 * @param {?proto.aps.apsLoopManualSelectParam|undefined} value
 * @return {!proto.aps.apsFullMsg} returns this
*/
proto.aps.apsFullMsg.prototype.setLoopManualSelectParam = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aps.apsFullMsg} returns this
 */
proto.aps.apsFullMsg.prototype.clearLoopManualSelectParam = function() {
  return this.setLoopManualSelectParam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aps.apsFullMsg.prototype.hasLoopManualSelectParam = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional apsLoopManualMatchParam loop_manual_match_param = 7;
 * @return {?proto.aps.apsLoopManualMatchParam}
 */
proto.aps.apsFullMsg.prototype.getLoopManualMatchParam = function() {
  return /** @type{?proto.aps.apsLoopManualMatchParam} */ (
    jspb.Message.getWrapperField(this, proto.aps.apsLoopManualMatchParam, 7));
};


/**
 * @param {?proto.aps.apsLoopManualMatchParam|undefined} value
 * @return {!proto.aps.apsFullMsg} returns this
*/
proto.aps.apsFullMsg.prototype.setLoopManualMatchParam = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aps.apsFullMsg} returns this
 */
proto.aps.apsFullMsg.prototype.clearLoopManualMatchParam = function() {
  return this.setLoopManualMatchParam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aps.apsFullMsg.prototype.hasLoopManualMatchParam = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional apsLoopManualOptimizeParam loop_manual_optimize_param = 8;
 * @return {?proto.aps.apsLoopManualOptimizeParam}
 */
proto.aps.apsFullMsg.prototype.getLoopManualOptimizeParam = function() {
  return /** @type{?proto.aps.apsLoopManualOptimizeParam} */ (
    jspb.Message.getWrapperField(this, proto.aps.apsLoopManualOptimizeParam, 8));
};


/**
 * @param {?proto.aps.apsLoopManualOptimizeParam|undefined} value
 * @return {!proto.aps.apsFullMsg} returns this
*/
proto.aps.apsFullMsg.prototype.setLoopManualOptimizeParam = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aps.apsFullMsg} returns this
 */
proto.aps.apsFullMsg.prototype.clearLoopManualOptimizeParam = function() {
  return this.setLoopManualOptimizeParam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aps.apsFullMsg.prototype.hasLoopManualOptimizeParam = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional apsLoopAutoSearchParam loop_auto_search_param = 9;
 * @return {?proto.aps.apsLoopAutoSearchParam}
 */
proto.aps.apsFullMsg.prototype.getLoopAutoSearchParam = function() {
  return /** @type{?proto.aps.apsLoopAutoSearchParam} */ (
    jspb.Message.getWrapperField(this, proto.aps.apsLoopAutoSearchParam, 9));
};


/**
 * @param {?proto.aps.apsLoopAutoSearchParam|undefined} value
 * @return {!proto.aps.apsFullMsg} returns this
*/
proto.aps.apsFullMsg.prototype.setLoopAutoSearchParam = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aps.apsFullMsg} returns this
 */
proto.aps.apsFullMsg.prototype.clearLoopAutoSearchParam = function() {
  return this.setLoopAutoSearchParam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aps.apsFullMsg.prototype.hasLoopAutoSearchParam = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional apsGlobalControlParam global_control_param = 10;
 * @return {?proto.aps.apsGlobalControlParam}
 */
proto.aps.apsFullMsg.prototype.getGlobalControlParam = function() {
  return /** @type{?proto.aps.apsGlobalControlParam} */ (
    jspb.Message.getWrapperField(this, proto.aps.apsGlobalControlParam, 10));
};


/**
 * @param {?proto.aps.apsGlobalControlParam|undefined} value
 * @return {!proto.aps.apsFullMsg} returns this
*/
proto.aps.apsFullMsg.prototype.setGlobalControlParam = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aps.apsFullMsg} returns this
 */
proto.aps.apsFullMsg.prototype.clearGlobalControlParam = function() {
  return this.setGlobalControlParam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aps.apsFullMsg.prototype.hasGlobalControlParam = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional apsGlobalRTKParam global_rtk_param = 11;
 * @return {?proto.aps.apsGlobalRTKParam}
 */
proto.aps.apsFullMsg.prototype.getGlobalRtkParam = function() {
  return /** @type{?proto.aps.apsGlobalRTKParam} */ (
    jspb.Message.getWrapperField(this, proto.aps.apsGlobalRTKParam, 11));
};


/**
 * @param {?proto.aps.apsGlobalRTKParam|undefined} value
 * @return {!proto.aps.apsFullMsg} returns this
*/
proto.aps.apsFullMsg.prototype.setGlobalRtkParam = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aps.apsFullMsg} returns this
 */
proto.aps.apsFullMsg.prototype.clearGlobalRtkParam = function() {
  return this.setGlobalRtkParam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aps.apsFullMsg.prototype.hasGlobalRtkParam = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional apsColorizeAutoParam colorize_auto_param = 12;
 * @return {?proto.aps.apsColorizeAutoParam}
 */
proto.aps.apsFullMsg.prototype.getColorizeAutoParam = function() {
  return /** @type{?proto.aps.apsColorizeAutoParam} */ (
    jspb.Message.getWrapperField(this, proto.aps.apsColorizeAutoParam, 12));
};


/**
 * @param {?proto.aps.apsColorizeAutoParam|undefined} value
 * @return {!proto.aps.apsFullMsg} returns this
*/
proto.aps.apsFullMsg.prototype.setColorizeAutoParam = function(value) {
  return jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.aps.apsFullMsg} returns this
 */
proto.aps.apsFullMsg.prototype.clearColorizeAutoParam = function() {
  return this.setColorizeAutoParam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aps.apsFullMsg.prototype.hasColorizeAutoParam = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string process_status = 13;
 * @return {string}
 */
proto.aps.apsFullMsg.prototype.getProcessStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.aps.apsFullMsg} returns this
 */
proto.aps.apsFullMsg.prototype.setProcessStatus = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.aps.apsFullMsg} returns this
 */
proto.aps.apsFullMsg.prototype.clearProcessStatus = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aps.apsFullMsg.prototype.hasProcessStatus = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional double process_ratio = 14;
 * @return {number}
 */
proto.aps.apsFullMsg.prototype.getProcessRatio = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.aps.apsFullMsg} returns this
 */
proto.aps.apsFullMsg.prototype.setProcessRatio = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.aps.apsFullMsg} returns this
 */
proto.aps.apsFullMsg.prototype.clearProcessRatio = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.aps.apsFullMsg.prototype.hasProcessRatio = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * @enum {number}
 */
proto.aps.MessageType = {
  SET: 0,
  ACK: 1
};

/**
 * @enum {number}
 */
proto.aps.ProcessStatus = {
  SUCCESS: 0,
  FAILED: 1
};

goog.object.extend(exports, proto.aps);
